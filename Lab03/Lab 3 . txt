Exercise 1 --
When doing 'let' to a variable you are able to change the variable to another thing without using let.

for example;
let var1 =22
var1 = 22

then if i wanted to change the variable I could just do 
var1 =25

whereas

When using 'const' to a variable, you are unable to change it after it has been assigned without using const again

for example;
const y = 44
y = 44

then if i tried to change it like this 
y = 22
it would not let me.

Exercise 2--
let arr1 = ['c','b','a'];
let arr2 = [1,2,3];

arr1.reverse();

let resultArray = arr1.concat(arr2);

let resultString = resultArray.join('');

console.log(resultString);

Exercise 3 --
let person = {
    name: "Luke",
    introduce: function() {
        return 'Hello, my name is ${this.name}
    }
};

console.log(person.introduce());

Exercise 4 --
let names = ['Alice', 'Bob', 'Cthulhu'];
let greetings = names.map(name => 'Hello ' + name + '!');
console.log(greetings);

Exercise 5 -- 
let myNumbers = [4, 7, 2];
let maxNumber = myNumbers.reduce((max, current) => {
    return Math.max(max, current);
}, myNumbers[0]);

console.log(maxNumber);

Exercise 6 --
displayArray = (inputArray) => {
    let itemArray = inputArray.map(item => `<li>${item}</li>`);
    let oneString = itemArray.reduce((acc, curr) => acc + curr, '');
    document.getElementById('cool-section').innerHTML =
        '<ul>' + oneString + '</ul>';
}

Exercise 7 --
let heroes = ['The Hulk', 'Wonder Woman', 'Batman'];
let index = _.findIndex(heroes, hero => hero === 'Batman');
console.log(index);

Exercise 8 --

function createCircle(radius) {
    return {
        area: function() {
            return Math.PI * radius * radius;
        },
        perimeter: function() {
            return 2 * Math.PI * radius;
        }
    };
}

let circle = createCircle(4);
console.log(circle.area());
console.log(circle.perimeter());

Exercise 9 --

function createCircle(radius) {
    return {
        area: function() {
            return Math.PI * radius * radius;
        },
        perimeter: function() {
            return 2 * Math.PI * radius;
        }
    };
}

function createCircles(radii) {
    return radii.map(radius => createCircle(radius));
}

let radiiArray = [1, 2, 3, 4, 5];
let circlesArray = createCircles(radiiArray);

circlesArray.forEach((circle, index) => {
    console.log(`Circle ${index + 1}:`);
    console.log(`  Area: ${circle.area()}`);
    console.log(`  Perimeter: ${circle.perimeter()}`);
});